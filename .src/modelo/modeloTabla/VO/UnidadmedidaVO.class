' Gambas class file

Property idunidadmedida As Integer
Private hidunidadmedida As Integer

Property texto As String
Private htexto As String

Property campo As String[]
Private hcampo As New String[]

Property campotipo As String[]
Private hcampotipo As New String[]

Property campovisible As String[]
Private hcampovisible As New String[]

Private Function idunidadmedida_read() As Integer

  Return hidunidadmedida

End

Private Sub idunidadmedida_write(Valor As Integer)

  hidunidadmedida = Valor

End

Private Function texto_read() As String

  Return htexto

End

Private Sub texto_write(Valor As String)

  htexto = Valor

End

Private Function campo_read() As String[]

  Return hcampo

End

Private Sub campo_write(Valor As String[])

  hcampo = Valor

End

Private Function campotipo_read() As String[]

  Return hcampotipo

End

Private Sub campotipo_write(Valor As String[])

  hcampotipo = Valor

End

Private Function campovisible_read() As String[]

  Return hcampovisible

End

Private Sub campovisible_write(Valor As String[])

  hcampovisible = Valor

End

Public Function Copia(Optional dato As UnidadmedidaVO) As UnidadmedidaVO

  Dim datoVOtmp As New UnidadmedidaVO
  Dim datoVOtmpOriginal As UnidadmedidaVO

  If IsNull(dato) Then
    dato = Me 'se copia a si mismo
  Endif
  datoVOtmp.idunidadmedida = dato.idunidadmedida
  datoVOtmp.texto = dato.texto
  Return datoVOtmp

End

Public Function ConvertirVOaColeccion(dato As UnidadmedidaVO) As Collection

  Dim colecciontmp As New Collection

  colecciontmp.add(dato.idunidadmedida, "idunidadmedida")
  colecciontmp.add(dato.texto, "texto")
  Return colecciontmp

End

Public Function ConvertirColeccionaVO(dato As Collection) As UnidadmedidaVO

  Dim datoVOtmp As New UnidadmedidaVO

  Try datoVOtmp.idunidadmedida = dato["idunidadmedida"]
  Try datoVOtmp.texto = dato["texto"]
  Return datoVOtmp

End
